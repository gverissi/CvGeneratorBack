package com.example.cv.service;

import com.example.cv.entity.CurriculumVitae;
import com.lowagie.text.DocumentException;
import org.apache.tomcat.util.codec.binary.Base64;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.ClassPathResource;
import org.springframework.stereotype.Service;
import org.thymeleaf.context.Context;
import org.thymeleaf.spring5.SpringTemplateEngine;
import org.xhtmlrenderer.pdf.ITextRenderer;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.nio.charset.StandardCharsets;
import java.time.LocalDate;
import java.time.Period;

@Service
public class PdfService {

    private final SpringTemplateEngine templateEngine;

    @Autowired
    public PdfService(SpringTemplateEngine templateEngine) {
        this.templateEngine = templateEngine;
    }

    /**
     * This method returns a PDF File that is obtained by converting an HTML file to a PDF.
     * The HTML file is a Thymeleaf template fill up by a CurriculumVitae entity.
     * The Thymeleaf template (pdf-template) is located in 'resources/templates' folder.
     * @param cv CurriculumVitae entity used to fill up the html template
     * @return File type that contains the PDF
     * @throws IOException thrown by renderPdf method
     * @throws DocumentException thrown by renderPdf method
     */
    public File generatePdf(CurriculumVitae cv) throws IOException, DocumentException {
        Context context = getContext(cv);
        String html = loadAndFillTemplate(context);
        return renderPdf(html, cv.getName());
    }

    /**
     * This method creates a Thymeleaf Context and set it's attributes according to the CurriculumVitae entity.
     * @param cv CurriculumVitae entity used to fill up the html template
     * @return Context from org.thymeleaf.context
     */
    private Context getContext(CurriculumVitae cv) {
        Context context = new Context();
        context.setVariable("cv", cv);
        byte[] encodeBase64 = Base64.encodeBase64(cv.getImage().getContent());
        String image = new String(encodeBase64, StandardCharsets.UTF_8);
        context.setVariable("image", image);
        int age = Period.between(cv.getInformation().getBirthDate(), LocalDate.now()).getYears();
        context.setVariable("age", age);
        context.setVariable("type", "pdf");
        return context;
    }

    /**
     * This method associates the Thymeleaf Context to a Thymeleaf template and creates a String representing the HTML file.
     * @param context the Thymeleaf Context generated by getContext() method
     * @return a String representing the HTML file
     */
    private String loadAndFillTemplate(Context context) {
        return templateEngine.process("pdf-template", context);
    }

    /**
     * Finally this method render a PDF File named cvName according to the String html.
     * @param html String representing the HTML file
     * @param cvName name of the pdf file
     * @return the PDF File
     * @throws IOException when creates the File
     * @throws DocumentException when creates the PDF
     */
    private File renderPdf(String html, String cvName) throws IOException, DocumentException {
        File file = File.createTempFile(cvName, ".pdf");
        OutputStream outputStream = new FileOutputStream(file);
        ITextRenderer renderer = new ITextRenderer();
        renderer.setDocumentFromString(html, new ClassPathResource("/static/").getURL().toExternalForm());
        renderer.layout();
        renderer.createPDF(outputStream);
        outputStream.close();
        file.deleteOnExit();
        return file;
    }

}
